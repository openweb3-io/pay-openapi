/*
 * Pay API Documentations
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.pay.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * InvoiceOut
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-29T14:50:22.360469+08:00[Asia/Shanghai]")
public class InvoiceOut {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private String channel;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_CREDENTIALS = "credentials";
  @SerializedName(SERIALIZED_NAME_CREDENTIALS)
  private Map<String, Object> credentials = null;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, Object> metadata = new HashMap<>();

  public static final String SERIALIZED_NAME_EXTRA = "extra";
  @SerializedName(SERIALIZED_NAME_EXTRA)
  private Map<String, Object> extra = null;

  public static final String SERIALIZED_NAME_NOTE = "note";
  @SerializedName(SERIALIZED_NAME_NOTE)
  private String note;

  public static final String SERIALIZED_NAME_EXPIRATION = "expiration";
  @SerializedName(SERIALIZED_NAME_EXPIRATION)
  private Integer expiration;

  /**
   * The invoice&#39;s status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PENDING("PENDING"),
    
    PAID("PAID"),
    
    FAILED("FAILED"),
    
    EXPIRED("EXPIRED"),
    
    COMPLETED("COMPLETED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_FAILED_MESSAGE = "failedMessage";
  @SerializedName(SERIALIZED_NAME_FAILED_MESSAGE)
  private String failedMessage;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_PAID_AT = "paidAt";
  @SerializedName(SERIALIZED_NAME_PAID_AT)
  private OffsetDateTime paidAt;

  public static final String SERIALIZED_NAME_FAILED_AT = "failedAt";
  @SerializedName(SERIALIZED_NAME_FAILED_AT)
  private OffsetDateTime failedAt;

  public static final String SERIALIZED_NAME_CANCELED_AT = "canceledAt";
  @SerializedName(SERIALIZED_NAME_CANCELED_AT)
  private OffsetDateTime canceledAt;

  public static final String SERIALIZED_NAME_EXPIRED_AT = "expiredAt";
  @SerializedName(SERIALIZED_NAME_EXPIRED_AT)
  private OffsetDateTime expiredAt;


  public InvoiceOut id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The invoice&#39;s ID
   * @return id
  **/
  @ApiModelProperty(example = "1brOrx2ZWZBpBUvZwXKQmoEYga2", required = true, value = "The invoice's ID")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public InvoiceOut uid(String uid) {
    
    this.uid = uid;
    return this;
  }

   /**
   * The invoice&#39;s UID
   * @return uid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "unique-invoice-identifier", value = "The invoice's UID")

  public String getUid() {
    return uid;
  }


  public void setUid(String uid) {
    this.uid = uid;
  }


  public InvoiceOut userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The invoice&#39;s creator
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The invoice's creator")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public InvoiceOut channel(String channel) {
    
    this.channel = channel;
    return this;
  }

   /**
   * Invoice channel
   * @return channel
  **/
  @ApiModelProperty(example = "ton-connect", required = true, value = "Invoice channel")

  public String getChannel() {
    return channel;
  }


  public void setChannel(String channel) {
    this.channel = channel;
  }


  public InvoiceOut currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Currency code
   * @return currency
  **/
  @ApiModelProperty(example = "USDT", required = true, value = "Currency code")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public InvoiceOut amount(String amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Big decimal string representation. Note that the max precision (number of digits after decimal point) depends on the currencyCode. E.g. for all fiat currencies is 2 (0.01), for BTC is 8, for USDT is 6. There&#39;s also min invoice amount for creating an invoice. It&#39;s 0.000001 BTC / 0.01 USDT / 0.01 USD / 0.01 EUR / 0.1 RUB.
   * @return amount
  **/
  @ApiModelProperty(example = "1", required = true, value = "Big decimal string representation. Note that the max precision (number of digits after decimal point) depends on the currencyCode. E.g. for all fiat currencies is 2 (0.01), for BTC is 8, for USDT is 6. There's also min invoice amount for creating an invoice. It's 0.000001 BTC / 0.01 USDT / 0.01 USD / 0.01 EUR / 0.1 RUB.")

  public String getAmount() {
    return amount;
  }


  public void setAmount(String amount) {
    this.amount = amount;
  }


  public InvoiceOut credentials(Map<String, Object> credentials) {
    
    this.credentials = credentials;
    return this;
  }

  public InvoiceOut putCredentialsItem(String key, Object credentialsItem) {
    if (this.credentials == null) {
      this.credentials = new HashMap<>();
    }
    this.credentials.put(key, credentialsItem);
    return this;
  }

   /**
   * Optional credentials
   * @return credentials
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional credentials")

  public Map<String, Object> getCredentials() {
    return credentials;
  }


  public void setCredentials(Map<String, Object> credentials) {
    this.credentials = credentials;
  }


  public InvoiceOut metadata(Map<String, Object> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public InvoiceOut putMetadataItem(String key, Object metadataItem) {
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Optional metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(required = true, value = "Optional metadata")

  public Map<String, Object> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, Object> metadata) {
    this.metadata = metadata;
  }


  public InvoiceOut extra(Map<String, Object> extra) {
    
    this.extra = extra;
    return this;
  }

  public InvoiceOut putExtraItem(String key, Object extraItem) {
    if (this.extra == null) {
      this.extra = new HashMap<>();
    }
    this.extra.put(key, extraItem);
    return this;
  }

   /**
   * Optional metadata
   * @return extra
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional metadata")

  public Map<String, Object> getExtra() {
    return extra;
  }


  public void setExtra(Map<String, Object> extra) {
    this.extra = extra;
  }


  public InvoiceOut note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * invoice note
   * @return note
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "note example", value = "invoice note")

  public String getNote() {
    return note;
  }


  public void setNote(String note) {
    this.note = note;
  }


  public InvoiceOut expiration(Integer expiration) {
    
    this.expiration = expiration;
    return this;
  }

   /**
   * The expiration seconds
   * @return expiration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "600", value = "The expiration seconds")

  public Integer getExpiration() {
    return expiration;
  }


  public void setExpiration(Integer expiration) {
    this.expiration = expiration;
  }


  public InvoiceOut status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * The invoice&#39;s status
   * @return status
  **/
  @ApiModelProperty(required = true, value = "The invoice's status")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public InvoiceOut failedMessage(String failedMessage) {
    
    this.failedMessage = failedMessage;
    return this;
  }

   /**
   * The message when invoice failed
   * @return failedMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The message when invoice failed")

  public String getFailedMessage() {
    return failedMessage;
  }


  public void setFailedMessage(String failedMessage) {
    this.failedMessage = failedMessage;
  }


  public InvoiceOut createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The invoice&#39;s creation time
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "The invoice's creation time")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public InvoiceOut paidAt(OffsetDateTime paidAt) {
    
    this.paidAt = paidAt;
    return this;
  }

   /**
   * The invoice&#39;s paid time
   * @return paidAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The invoice's paid time")

  public OffsetDateTime getPaidAt() {
    return paidAt;
  }


  public void setPaidAt(OffsetDateTime paidAt) {
    this.paidAt = paidAt;
  }


  public InvoiceOut failedAt(OffsetDateTime failedAt) {
    
    this.failedAt = failedAt;
    return this;
  }

   /**
   * The invoice&#39;s failure time
   * @return failedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The invoice's failure time")

  public OffsetDateTime getFailedAt() {
    return failedAt;
  }


  public void setFailedAt(OffsetDateTime failedAt) {
    this.failedAt = failedAt;
  }


  public InvoiceOut canceledAt(OffsetDateTime canceledAt) {
    
    this.canceledAt = canceledAt;
    return this;
  }

   /**
   * The invoice&#39;s cancel time
   * @return canceledAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The invoice's cancel time")

  public OffsetDateTime getCanceledAt() {
    return canceledAt;
  }


  public void setCanceledAt(OffsetDateTime canceledAt) {
    this.canceledAt = canceledAt;
  }


  public InvoiceOut expiredAt(OffsetDateTime expiredAt) {
    
    this.expiredAt = expiredAt;
    return this;
  }

   /**
   * The invoice&#39;s expiration time
   * @return expiredAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The invoice's expiration time")

  public OffsetDateTime getExpiredAt() {
    return expiredAt;
  }


  public void setExpiredAt(OffsetDateTime expiredAt) {
    this.expiredAt = expiredAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvoiceOut invoiceOut = (InvoiceOut) o;
    return Objects.equals(this.id, invoiceOut.id) &&
        Objects.equals(this.uid, invoiceOut.uid) &&
        Objects.equals(this.userId, invoiceOut.userId) &&
        Objects.equals(this.channel, invoiceOut.channel) &&
        Objects.equals(this.currency, invoiceOut.currency) &&
        Objects.equals(this.amount, invoiceOut.amount) &&
        Objects.equals(this.credentials, invoiceOut.credentials) &&
        Objects.equals(this.metadata, invoiceOut.metadata) &&
        Objects.equals(this.extra, invoiceOut.extra) &&
        Objects.equals(this.note, invoiceOut.note) &&
        Objects.equals(this.expiration, invoiceOut.expiration) &&
        Objects.equals(this.status, invoiceOut.status) &&
        Objects.equals(this.failedMessage, invoiceOut.failedMessage) &&
        Objects.equals(this.createdAt, invoiceOut.createdAt) &&
        Objects.equals(this.paidAt, invoiceOut.paidAt) &&
        Objects.equals(this.failedAt, invoiceOut.failedAt) &&
        Objects.equals(this.canceledAt, invoiceOut.canceledAt) &&
        Objects.equals(this.expiredAt, invoiceOut.expiredAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, uid, userId, channel, currency, amount, credentials, metadata, extra, note, expiration, status, failedMessage, createdAt, paidAt, failedAt, canceledAt, expiredAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvoiceOut {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    extra: ").append(toIndentedString(extra)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    failedMessage: ").append(toIndentedString(failedMessage)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    paidAt: ").append(toIndentedString(paidAt)).append("\n");
    sb.append("    failedAt: ").append(toIndentedString(failedAt)).append("\n");
    sb.append("    canceledAt: ").append(toIndentedString(canceledAt)).append("\n");
    sb.append("    expiredAt: ").append(toIndentedString(expiredAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

