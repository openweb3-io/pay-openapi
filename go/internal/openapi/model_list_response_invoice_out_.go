/*
 * Pay API Documentations
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListResponseInvoiceOut struct for ListResponseInvoiceOut
type ListResponseInvoiceOut struct {
	Data []InvoiceOut `json:"data"`
	Total *int32 `json:"total,omitempty"`
}

// NewListResponseInvoiceOut instantiates a new ListResponseInvoiceOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListResponseInvoiceOut(data []InvoiceOut) *ListResponseInvoiceOut {
	this := ListResponseInvoiceOut{}
	this.Data = data
	return &this
}

// NewListResponseInvoiceOutWithDefaults instantiates a new ListResponseInvoiceOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListResponseInvoiceOutWithDefaults() *ListResponseInvoiceOut {
	this := ListResponseInvoiceOut{}
	return &this
}

// GetData returns the Data field value
func (o *ListResponseInvoiceOut) GetData() []InvoiceOut {
	if o == nil {
		var ret []InvoiceOut
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ListResponseInvoiceOut) GetDataOk() (*[]InvoiceOut, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ListResponseInvoiceOut) SetData(v []InvoiceOut) {
	o.Data = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ListResponseInvoiceOut) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResponseInvoiceOut) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ListResponseInvoiceOut) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *ListResponseInvoiceOut) SetTotal(v int32) {
	o.Total = &v
}

func (o ListResponseInvoiceOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	return json.Marshal(toSerialize)
}

type NullableListResponseInvoiceOut struct {
	value *ListResponseInvoiceOut
	isSet bool
}

func (v NullableListResponseInvoiceOut) Get() *ListResponseInvoiceOut {
	return v.value
}

func (v *NullableListResponseInvoiceOut) Set(val *ListResponseInvoiceOut) {
	v.value = val
	v.isSet = true
}

func (v NullableListResponseInvoiceOut) IsSet() bool {
	return v.isSet
}

func (v *NullableListResponseInvoiceOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListResponseInvoiceOut(val *ListResponseInvoiceOut) *NullableListResponseInvoiceOut {
	return &NullableListResponseInvoiceOut{value: val, isSet: true}
}

func (v NullableListResponseInvoiceOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListResponseInvoiceOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


