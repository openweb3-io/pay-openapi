/*
 * Pay API Documentations
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 1.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListResponseEndpointOut struct for ListResponseEndpointOut
type ListResponseEndpointOut struct {
	Data []EndpointOut `json:"data"`
	Total *int32 `json:"total,omitempty"`
	HasNext *bool `json:"hasNext,omitempty"`
	HasPrev *bool `json:"hasPrev,omitempty"`
	PreCursor *string `json:"preCursor,omitempty"`
	NextCursor *string `json:"nextCursor,omitempty"`
}

// NewListResponseEndpointOut instantiates a new ListResponseEndpointOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListResponseEndpointOut(data []EndpointOut) *ListResponseEndpointOut {
	this := ListResponseEndpointOut{}
	this.Data = data
	return &this
}

// NewListResponseEndpointOutWithDefaults instantiates a new ListResponseEndpointOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListResponseEndpointOutWithDefaults() *ListResponseEndpointOut {
	this := ListResponseEndpointOut{}
	return &this
}

// GetData returns the Data field value
func (o *ListResponseEndpointOut) GetData() []EndpointOut {
	if o == nil {
		var ret []EndpointOut
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *ListResponseEndpointOut) GetDataOk() (*[]EndpointOut, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *ListResponseEndpointOut) SetData(v []EndpointOut) {
	o.Data = v
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *ListResponseEndpointOut) GetTotal() int32 {
	if o == nil || o.Total == nil {
		var ret int32
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResponseEndpointOut) GetTotalOk() (*int32, bool) {
	if o == nil || o.Total == nil {
		return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *ListResponseEndpointOut) HasTotal() bool {
	if o != nil && o.Total != nil {
		return true
	}

	return false
}

// SetTotal gets a reference to the given int32 and assigns it to the Total field.
func (o *ListResponseEndpointOut) SetTotal(v int32) {
	o.Total = &v
}

// GetHasNext returns the HasNext field value if set, zero value otherwise.
func (o *ListResponseEndpointOut) GetHasNext() bool {
	if o == nil || o.HasNext == nil {
		var ret bool
		return ret
	}
	return *o.HasNext
}

// GetHasNextOk returns a tuple with the HasNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResponseEndpointOut) GetHasNextOk() (*bool, bool) {
	if o == nil || o.HasNext == nil {
		return nil, false
	}
	return o.HasNext, true
}

// HasHasNext returns a boolean if a field has been set.
func (o *ListResponseEndpointOut) HasHasNext() bool {
	if o != nil && o.HasNext != nil {
		return true
	}

	return false
}

// SetHasNext gets a reference to the given bool and assigns it to the HasNext field.
func (o *ListResponseEndpointOut) SetHasNext(v bool) {
	o.HasNext = &v
}

// GetHasPrev returns the HasPrev field value if set, zero value otherwise.
func (o *ListResponseEndpointOut) GetHasPrev() bool {
	if o == nil || o.HasPrev == nil {
		var ret bool
		return ret
	}
	return *o.HasPrev
}

// GetHasPrevOk returns a tuple with the HasPrev field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResponseEndpointOut) GetHasPrevOk() (*bool, bool) {
	if o == nil || o.HasPrev == nil {
		return nil, false
	}
	return o.HasPrev, true
}

// HasHasPrev returns a boolean if a field has been set.
func (o *ListResponseEndpointOut) HasHasPrev() bool {
	if o != nil && o.HasPrev != nil {
		return true
	}

	return false
}

// SetHasPrev gets a reference to the given bool and assigns it to the HasPrev field.
func (o *ListResponseEndpointOut) SetHasPrev(v bool) {
	o.HasPrev = &v
}

// GetPreCursor returns the PreCursor field value if set, zero value otherwise.
func (o *ListResponseEndpointOut) GetPreCursor() string {
	if o == nil || o.PreCursor == nil {
		var ret string
		return ret
	}
	return *o.PreCursor
}

// GetPreCursorOk returns a tuple with the PreCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResponseEndpointOut) GetPreCursorOk() (*string, bool) {
	if o == nil || o.PreCursor == nil {
		return nil, false
	}
	return o.PreCursor, true
}

// HasPreCursor returns a boolean if a field has been set.
func (o *ListResponseEndpointOut) HasPreCursor() bool {
	if o != nil && o.PreCursor != nil {
		return true
	}

	return false
}

// SetPreCursor gets a reference to the given string and assigns it to the PreCursor field.
func (o *ListResponseEndpointOut) SetPreCursor(v string) {
	o.PreCursor = &v
}

// GetNextCursor returns the NextCursor field value if set, zero value otherwise.
func (o *ListResponseEndpointOut) GetNextCursor() string {
	if o == nil || o.NextCursor == nil {
		var ret string
		return ret
	}
	return *o.NextCursor
}

// GetNextCursorOk returns a tuple with the NextCursor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResponseEndpointOut) GetNextCursorOk() (*string, bool) {
	if o == nil || o.NextCursor == nil {
		return nil, false
	}
	return o.NextCursor, true
}

// HasNextCursor returns a boolean if a field has been set.
func (o *ListResponseEndpointOut) HasNextCursor() bool {
	if o != nil && o.NextCursor != nil {
		return true
	}

	return false
}

// SetNextCursor gets a reference to the given string and assigns it to the NextCursor field.
func (o *ListResponseEndpointOut) SetNextCursor(v string) {
	o.NextCursor = &v
}

func (o ListResponseEndpointOut) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	if o.Total != nil {
		toSerialize["total"] = o.Total
	}
	if o.HasNext != nil {
		toSerialize["hasNext"] = o.HasNext
	}
	if o.HasPrev != nil {
		toSerialize["hasPrev"] = o.HasPrev
	}
	if o.PreCursor != nil {
		toSerialize["preCursor"] = o.PreCursor
	}
	if o.NextCursor != nil {
		toSerialize["nextCursor"] = o.NextCursor
	}
	return json.Marshal(toSerialize)
}

type NullableListResponseEndpointOut struct {
	value *ListResponseEndpointOut
	isSet bool
}

func (v NullableListResponseEndpointOut) Get() *ListResponseEndpointOut {
	return v.value
}

func (v *NullableListResponseEndpointOut) Set(val *ListResponseEndpointOut) {
	v.value = val
	v.isSet = true
}

func (v NullableListResponseEndpointOut) IsSet() bool {
	return v.isSet
}

func (v *NullableListResponseEndpointOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListResponseEndpointOut(val *ListResponseEndpointOut) *NullableListResponseEndpointOut {
	return &NullableListResponseEndpointOut{value: val, isSet: true}
}

func (v NullableListResponseEndpointOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListResponseEndpointOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


