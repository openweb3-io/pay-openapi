/*
 * Wallet Pay API Documentations
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.openweb3.pay.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * OrderOut
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-07-09T17:47:29.721176+08:00[Asia/Shanghai]")
public class OrderOut {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Map<String, String> metadata = new HashMap<String, String>();

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_UID = "uid";
  @SerializedName(SERIALIZED_NAME_UID)
  private String uid;

  public static final String SERIALIZED_NAME_CHANNEL = "channel";
  @SerializedName(SERIALIZED_NAME_CHANNEL)
  private String channel;

  public static final String SERIALIZED_NAME_CHAIN = "chain";
  @SerializedName(SERIALIZED_NAME_CHAIN)
  private String chain;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_CREDENTIALS = "credentials";
  @SerializedName(SERIALIZED_NAME_CREDENTIALS)
  private String credentials;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private Date createdAt;

  public static final String SERIALIZED_NAME_PAID_AT = "paidAt";
  @SerializedName(SERIALIZED_NAME_PAID_AT)
  private Date paidAt;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Integer status;

  public static final String SERIALIZED_NAME_FAILED_MESSAGE = "failedMessage";
  @SerializedName(SERIALIZED_NAME_FAILED_MESSAGE)
  private String failedMessage;

  public static final String SERIALIZED_NAME_CANCELED_AT = "canceledAt";
  @SerializedName(SERIALIZED_NAME_CANCELED_AT)
  private Date canceledAt;

  public static final String SERIALIZED_NAME_FAILED_AT = "failedAt";
  @SerializedName(SERIALIZED_NAME_FAILED_AT)
  private Date failedAt;


  public OrderOut id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The order&#39;s ID
   * @return id
  **/
  @ApiModelProperty(example = "1brOrx2ZWZBpBUvZwXKQmoEYga2", required = true, value = "The order's ID")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public OrderOut metadata(Map<String, String> metadata) {
    
    this.metadata = metadata;
    return this;
  }

  public OrderOut putMetadataItem(String key, String metadataItem) {
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(required = true, value = "")

  public Map<String, String> getMetadata() {
    return metadata;
  }


  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  public OrderOut userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * The order&#39;s creator
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order's creator")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public OrderOut uid(String uid) {
    
    this.uid = uid;
    return this;
  }

   /**
   * The order&#39;s UID
   * @return uid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "unique-order-identifier", value = "The order's UID")

  public String getUid() {
    return uid;
  }


  public void setUid(String uid) {
    this.uid = uid;
  }


  public OrderOut channel(String channel) {
    
    this.channel = channel;
    return this;
  }

   /**
   * Order channel
   * @return channel
  **/
  @ApiModelProperty(example = "ton-connect", required = true, value = "Order channel")

  public String getChannel() {
    return channel;
  }


  public void setChannel(String channel) {
    this.channel = channel;
  }


  public OrderOut chain(String chain) {
    
    this.chain = chain;
    return this;
  }

   /**
   * Blockchain code
   * @return chain
  **/
  @ApiModelProperty(example = "ton", required = true, value = "Blockchain code")

  public String getChain() {
    return chain;
  }


  public void setChain(String chain) {
    this.chain = chain;
  }


  public OrderOut currency(String currency) {
    
    this.currency = currency;
    return this;
  }

   /**
   * Currency code
   * @return currency
  **/
  @ApiModelProperty(example = "USDT", required = true, value = "Currency code")

  public String getCurrency() {
    return currency;
  }


  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public OrderOut amount(String amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Big decimal string representation. Note that the max precision (number of digits after decimal point) depends on the currencyCode. E.g. for all fiat currencies is 2 (0.01), for BTC is 8, for USDT is 6. There&#39;s also min order amount for creating an order. It&#39;s 0.000001 BTC / 0.01 USDT / 0.01 USD / 0.01 EUR / 0.1 RUB.
   * @return amount
  **/
  @ApiModelProperty(example = "1", required = true, value = "Big decimal string representation. Note that the max precision (number of digits after decimal point) depends on the currencyCode. E.g. for all fiat currencies is 2 (0.01), for BTC is 8, for USDT is 6. There's also min order amount for creating an order. It's 0.000001 BTC / 0.01 USDT / 0.01 USD / 0.01 EUR / 0.1 RUB.")

  public String getAmount() {
    return amount;
  }


  public void setAmount(String amount) {
    this.amount = amount;
  }


  public OrderOut credentials(String credentials) {
    
    this.credentials = credentials;
    return this;
  }

   /**
   * The payment token from payment channel
   * @return credentials
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The payment token from payment channel")

  public String getCredentials() {
    return credentials;
  }


  public void setCredentials(String credentials) {
    this.credentials = credentials;
  }


  public OrderOut createdAt(Date createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * The order&#39;s creation time
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "The order's creation time")

  public Date getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(Date createdAt) {
    this.createdAt = createdAt;
  }


  public OrderOut paidAt(Date paidAt) {
    
    this.paidAt = paidAt;
    return this;
  }

   /**
   * The order&#39;s paid time
   * @return paidAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order's paid time")

  public Date getPaidAt() {
    return paidAt;
  }


  public void setPaidAt(Date paidAt) {
    this.paidAt = paidAt;
  }


  public OrderOut status(Integer status) {
    
    this.status = status;
    return this;
  }

   /**
   * The order&#39;s status 0 - processing 1 - paid 2 - failed 3 - canceled
   * @return status
  **/
  @ApiModelProperty(required = true, value = "The order's status 0 - processing 1 - paid 2 - failed 3 - canceled")

  public Integer getStatus() {
    return status;
  }


  public void setStatus(Integer status) {
    this.status = status;
  }


  public OrderOut failedMessage(String failedMessage) {
    
    this.failedMessage = failedMessage;
    return this;
  }

   /**
   * The message when order failed
   * @return failedMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The message when order failed")

  public String getFailedMessage() {
    return failedMessage;
  }


  public void setFailedMessage(String failedMessage) {
    this.failedMessage = failedMessage;
  }


  public OrderOut canceledAt(Date canceledAt) {
    
    this.canceledAt = canceledAt;
    return this;
  }

   /**
   * The order&#39;s cancel time
   * @return canceledAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order's cancel time")

  public Date getCanceledAt() {
    return canceledAt;
  }


  public void setCanceledAt(Date canceledAt) {
    this.canceledAt = canceledAt;
  }


  public OrderOut failedAt(Date failedAt) {
    
    this.failedAt = failedAt;
    return this;
  }

   /**
   * The order&#39;s failure time
   * @return failedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The order's failure time")

  public Date getFailedAt() {
    return failedAt;
  }


  public void setFailedAt(Date failedAt) {
    this.failedAt = failedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderOut orderOut = (OrderOut) o;
    return Objects.equals(this.id, orderOut.id) &&
        Objects.equals(this.metadata, orderOut.metadata) &&
        Objects.equals(this.userId, orderOut.userId) &&
        Objects.equals(this.uid, orderOut.uid) &&
        Objects.equals(this.channel, orderOut.channel) &&
        Objects.equals(this.chain, orderOut.chain) &&
        Objects.equals(this.currency, orderOut.currency) &&
        Objects.equals(this.amount, orderOut.amount) &&
        Objects.equals(this.credentials, orderOut.credentials) &&
        Objects.equals(this.createdAt, orderOut.createdAt) &&
        Objects.equals(this.paidAt, orderOut.paidAt) &&
        Objects.equals(this.status, orderOut.status) &&
        Objects.equals(this.failedMessage, orderOut.failedMessage) &&
        Objects.equals(this.canceledAt, orderOut.canceledAt) &&
        Objects.equals(this.failedAt, orderOut.failedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, metadata, userId, uid, channel, chain, currency, amount, credentials, createdAt, paidAt, status, failedMessage, canceledAt, failedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderOut {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    uid: ").append(toIndentedString(uid)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    chain: ").append(toIndentedString(chain)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    credentials: ").append(toIndentedString(credentials)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    paidAt: ").append(toIndentedString(paidAt)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    failedMessage: ").append(toIndentedString(failedMessage)).append("\n");
    sb.append("    canceledAt: ").append(toIndentedString(canceledAt)).append("\n");
    sb.append("    failedAt: ").append(toIndentedString(failedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

