openapi: 3.0.2
info:
  title: Pay API Documentations
  version: "1.0"
servers:
- url: https://api.pay.openweb3.io
security:
- ApiKeyAuth: []
paths:
  /api/v1/accounts:
    get:
      description: List accounts.
      operationId: v1.account.list
      parameters:
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          description: Limit the number of returned items
          example: 100
          format: uint64
          minimum: 0
          type: integer
        style: form
      - description: Specifying the amount of excluded from a response the first N
          items
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: Specifying the amount of excluded from a response the first
            N items
          example: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_AccountOut_'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
      summary: List Accounts
      tags:
      - Account
      x-accepts: application/json
  /api/v1/orders:
    get:
      description: List orders.
      operationId: v1.order.list
      parameters:
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          description: Limit the number of returned items
          example: 100
          format: uint64
          minimum: 0
          type: integer
        style: form
      - description: Specifying the amount of excluded from a response the first N
          orders
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          description: Specifying the amount of excluded from a response the first
            N orders
          example: 0
          type: integer
        style: form
      - description: Optional order blockchain code
        explode: true
        in: query
        name: chain
        required: false
        schema:
          description: Blockchain of the order
          example: ton
          nullable: true
          type: string
        style: form
      - description: Channel of the order
        explode: true
        in: query
        name: channel
        required: false
        schema:
          description: Channel of the order
          example: ton-connect
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_OrderOut_'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
      summary: List Orders
      tags:
      - Order
      x-accepts: application/json
    post:
      description: Create a new order.
      operationId: v1.order.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderIn'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderOut'
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderOut'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
      summary: Create Order
      tags:
      - Order
      x-readme:
        code-samples: []
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/endpoints:
    get:
      description: List endpoints.
      operationId: v1.endpoint.list
      parameters:
      - description: Limit the number of returned items
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 20
          description: Limit the number of returned items
          example: 100
          format: uint64
          minimum: 0
          type: integer
        style: form
      - description: Specifying the start cursor position
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          description: Specifying the start cursor position
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResponse_EndpointOut_'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
      summary: List endpoints
      tags:
      - Endpoint
      x-accepts: application/json
    post:
      description: Create a webhook endpoint.
      operationId: v1.endpoint.create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointIn'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Bad request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
      summary: Create endpoint
      tags:
      - Endpoint
      x-readme:
        code-samples: []
      x-contentType: application/json
      x-accepts: application/json
  /api/v1/endpoints/{endpointId}:
    delete:
      description: delete the specified webhook endpoint.
      operationId: v1.endpoint.delete
      parameters:
      - description: Specified the endpoint id.
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          description: Specified the endpoint id.
          example: wb_12345xsfei
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
      summary: Delete endpoint
      tags:
      - Endpoint
      x-accepts: application/json
    get:
      description: retrieve a specified webhook endpoint.
      operationId: v1.endpoint.retrieve
      parameters:
      - description: Specified the webhook endpoint id.
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          description: Specified the webhook endpoint id.
          example: wb_12345xsfei
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
      summary: Retrieve endpoint
      tags:
      - Endpoint
      x-accepts: application/json
    patch:
      description: update a specified webhook endpoint.
      operationId: v1.endpoint.patch
      parameters:
      - description: Specified the endpoint id.
        explode: false
        in: path
        name: endpointId
        required: true
        schema:
          description: Specified the endpoint id.
          example: wb_12345xsfei
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EndpointPatch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EndpointOut'
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Conflict
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HTTPValidationError'
          description: Validation Error
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpErrorOut'
          description: Too Many Requests
      summary: update endpoint
      tags:
      - Endpoint
      x-contentType: application/json
      x-accepts: application/json
components:
  schemas:
    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: '#/components/schemas/ValidationError'
          type: array
      required:
      - detail
      type: object
    HttpErrorOut:
      properties:
        code:
          type: string
        detail:
          type: string
      required:
      - code
      - detail
      title: HttpError
      type: object
    ValidationError:
      description: Validation errors have their own schema to provide context for
        invalid requests eg. mismatched types and out of bounds values. There may
        be any number of these per 422 UNPROCESSABLE ENTITY error.
      properties:
        loc:
          description: The location as a [`Vec`] of [`String`]s -- often in the form
            `["body", "field_name"]`, `["query", "field_name"]`, etc. They may, however,
            be arbitrarily deep.
          items:
            type: string
          type: array
        msg:
          description: The message accompanying the validation error item.
          type: string
        type:
          description: The type of error, often "type_error" or "value_error", but
            sometimes with more context like as "value_error.number.not_ge"
          type: string
      required:
      - loc
      - msg
      - type
      type: object
    Ordering:
      description: Defines the ordering in a listing of results.
      enum:
      - asc
      - desc
      type: string
    OrderIn:
      example:
        uid: unique-order-identifier
        metadata:
          key: metadata
        chain: ton
        amount: "0.0012345"
        channel: ton-connect
        currency: USDT
        userId: userid_example
      properties:
        metadata:
          additionalProperties:
            type: string
          default: {}
          description: Optional metadata
          type: object
        userId:
          description: Optional user identifier
          example: userid_example
          maxLength: 256
          minLength: 1
          type: string
        channel:
          description: Order channel
          example: ton-connect
          maxLength: 256
          minLength: 1
          type: string
        chain:
          description: Blockchain code
          example: ton
          maxLength: 256
          minLength: 1
          type: string
        uid:
          description: Optional unique identifier for the order
          example: unique-order-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: ^[a-zA-Z0-9\-_.]+$
          type: string
        currency:
          description: Currency code
          example: USDT
          maxLength: 256
          minLength: 1
          type: string
        amount:
          description: Big decimal string representation. Note that the max precision
            (number of digits after decimal point) depends on the currencyCode. E.g.
            for all fiat currencies is 2 (0.01), for BTC is 8, for USDT is 6. There's
            also min order amount for creating an order. It's 0.000001 BTC / 0.01
            USDT / 0.01 USD / 0.01 EUR / 0.1 RUB.
          example: "0.0012345"
          maxLength: 256
          minLength: 1
          type: string
      required:
      - amount
      - chain
      - channel
      - currency
      type: object
    OrderOut:
      example:
        metadata:
          key: metadata
        chain: ton
        amount: "1"
        credentials: credentials
        channel: ton-connect
        failedMessage: failedMessage
        userId: userId
        uid: unique-order-identifier
        createdAt: 2000-01-23T04:56:07.000+00:00
        failedAt: 2000-01-23T04:56:07.000+00:00
        canceledAt: 2000-01-23T04:56:07.000+00:00
        paidAt: 2000-01-23T04:56:07.000+00:00
        currency: USDT
        id: 1brOrx2ZWZBpBUvZwXKQmoEYga2
        status: 0
      properties:
        id:
          description: The order's ID
          example: 1brOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
        metadata:
          additionalProperties:
            type: string
          type: object
        userId:
          description: The order's creator
          nullable: true
          type: string
        uid:
          description: The order's UID
          example: unique-order-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: ^[a-zA-Z0-9\-_.]+$
          type: string
        channel:
          description: Order channel
          example: ton-connect
          maxLength: 256
          minLength: 1
          type: string
        chain:
          description: Blockchain code
          example: ton
          maxLength: 256
          minLength: 1
          type: string
        currency:
          description: Currency code
          example: USDT
          maxLength: 256
          minLength: 1
          type: string
        amount:
          description: Big decimal string representation. Note that the max precision
            (number of digits after decimal point) depends on the currencyCode. E.g.
            for all fiat currencies is 2 (0.01), for BTC is 8, for USDT is 6. There's
            also min order amount for creating an order. It's 0.000001 BTC / 0.01
            USDT / 0.01 USD / 0.01 EUR / 0.1 RUB.
          example: "1"
          maxLength: 256
          minLength: 1
          type: string
        credentials:
          description: The payment token from payment channel
          type: string
        createdAt:
          description: The order's creation time
          format: date-time
          type: string
        paidAt:
          description: The order's paid time
          format: date-time
          type: string
        status:
          description: |-
            The order's status
            0 - processing
            1 - paid
            2 - failed
            3 - canceled
          type: integer
        failedMessage:
          description: The message when order failed
          type: string
        canceledAt:
          description: The order's cancel time
          format: date-time
          type: string
        failedAt:
          description: The order's failure time
          format: date-time
          type: string
      required:
      - amount
      - chain
      - channel
      - createdAt
      - currency
      - description
      - id
      - metadata
      - status
      type: object
    ListResponse_OrderOut_:
      example:
        total: 6
        data:
        - metadata:
            key: metadata
          chain: ton
          amount: "1"
          credentials: credentials
          channel: ton-connect
          failedMessage: failedMessage
          userId: userId
          uid: unique-order-identifier
          createdAt: 2000-01-23T04:56:07.000+00:00
          failedAt: 2000-01-23T04:56:07.000+00:00
          canceledAt: 2000-01-23T04:56:07.000+00:00
          paidAt: 2000-01-23T04:56:07.000+00:00
          currency: USDT
          id: 1brOrx2ZWZBpBUvZwXKQmoEYga2
          status: 0
        - metadata:
            key: metadata
          chain: ton
          amount: "1"
          credentials: credentials
          channel: ton-connect
          failedMessage: failedMessage
          userId: userId
          uid: unique-order-identifier
          createdAt: 2000-01-23T04:56:07.000+00:00
          failedAt: 2000-01-23T04:56:07.000+00:00
          canceledAt: 2000-01-23T04:56:07.000+00:00
          paidAt: 2000-01-23T04:56:07.000+00:00
          currency: USDT
          id: 1brOrx2ZWZBpBUvZwXKQmoEYga2
          status: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/OrderOut'
          type: array
        total:
          type: integer
      required:
      - data
      type: object
    AccountOut:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        amount: "0.1"
        currency: USDT
        id: 1brOrx2ZWZBpBUvZwXKQmoEYga2
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: The order's ID
          example: 1brOrx2ZWZBpBUvZwXKQmoEYga2
          type: string
        currency:
          description: Currency code
          example: USDT
          maxLength: 256
          minLength: 1
          type: string
        amount:
          description: Big decimal string representation. Note that the max precision
            (number of digits after decimal point) depends on the currencyCode. E.g.
            for all fiat currencies is 2 (0.01), for BTC is 8, for USDT is 6. There's
            also min order amount for creating an order. It's 0.000001 BTC / 0.01
            USDT / 0.01 USD / 0.01 EUR / 0.1 RUB.
          example: "0.1"
          maxLength: 256
          minLength: 1
          type: string
        createdAt:
          description: The order's created time
          format: date-time
          type: string
        updatedAt:
          description: The order's updated time
          format: date-time
          type: string
      required:
      - amount
      - createdAt
      - currency
      - id
      - updatedAt
      type: object
    ListResponse_AccountOut_:
      example:
        total: 0
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          amount: "0.1"
          currency: USDT
          id: 1brOrx2ZWZBpBUvZwXKQmoEYga2
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          amount: "0.1"
          currency: USDT
          id: 1brOrx2ZWZBpBUvZwXKQmoEYga2
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/AccountOut'
          type: array
        total:
          type: integer
      required:
      - data
      type: object
    EndpointIn:
      example:
        filter: '{"network": "mainnet"}'
        uid: unique-endpoint-identifier
        headers:
          node: http://dashboard.com/node1
          tag: node
        chain: ton
        metadata:
          node: http://dashboard.com/node1
          tag: node
        description: The description for endpoint
        disabled: false
        secret: whsec_13afsaew2skae1lo3r
        filterTypes:
        - tx.created
        version: 0
        url: http://example.com/endpoint
        network: mainnet
      properties:
        uid:
          description: The endpoint's UID
          example: unique-endpoint-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: ^[a-zA-Z0-9\-_.]+$
          type: string
        network:
          description: The chain network monitor by endpoint
          example: mainnet
          maxLength: 256
          minLength: 1
          type: string
        chain:
          description: Blockchain code
          example: ton
          maxLength: 256
          minLength: 1
          type: string
        description:
          description: The endpoint's description
          example: The description for endpoint
          type: string
        secret:
          description: The endpoint's secret
          example: whsec_13afsaew2skae1lo3r
          nullable: true
          type: string
        url:
          description: The webhook endpoint url
          example: http://example.com/endpoint
          type: string
        filter:
          description: The webhook endpoint url
          example: '{"network": "mainnet"}'
          nullable: true
          type: string
        filterTypes:
          description: The webhook endpoint url
          example:
          - tx.created
          items:
            type: string
          type: array
        disabled:
          description: indicate whether to disable the webhook endpoint
          example: false
          type: boolean
        metadata:
          additionalProperties:
            type: string
          default: {}
          description: Optional metadata
          example:
            node: http://dashboard.com/node1
            tag: node
          nullable: true
          type: object
        headers:
          additionalProperties:
            type: string
          default: {}
          description: Optional metadata
          example:
            node: http://dashboard.com/node1
            tag: node
          nullable: true
          type: object
        version:
          description: endpoint version
          type: integer
      required:
      - chain
      - filterTypes
      - network
      - url
      type: object
    EndpointPatch:
      example:
        filter: '{"network": "mainnet"}'
        uid: unique-endpoint-identifier
        headers:
          node: http://dashboard.com/node1
          tag: node
        metadata:
          node: http://dashboard.com/node1
          tag: node
        description: The description for endpoint
        disabled: false
        secret: whsec_13afsaew2skae1lo3r
        filterTypes:
        - tx.created
        version: 0
        url: http://example.com/endpoint
      properties:
        uid:
          description: The endpoint's UID
          example: unique-endpoint-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: ^[a-zA-Z0-9\-_.]+$
          type: string
        description:
          description: The endpoint's description
          example: The description for endpoint
          type: string
        secret:
          description: The endpoint's secret
          example: whsec_13afsaew2skae1lo3r
          nullable: true
          type: string
        url:
          description: The webhook endpoint url
          example: http://example.com/endpoint
          type: string
        filter:
          description: The webhook endpoint url
          example: '{"network": "mainnet"}'
          nullable: true
          type: string
        filterTypes:
          description: The webhook endpoint url
          example:
          - tx.created
          items:
            type: string
          type: array
        disabled:
          description: indicate whether to disable the webhook endpoint
          example: false
          type: boolean
        metadata:
          additionalProperties:
            type: string
          default: {}
          description: Optional metadata
          example:
            node: http://dashboard.com/node1
            tag: node
          nullable: true
          type: object
        headers:
          additionalProperties:
            type: string
          default: {}
          description: Optional metadata
          example:
            node: http://dashboard.com/node1
            tag: node
          nullable: true
          type: object
        version:
          description: endpoint version
          type: integer
      required:
      - filterTypes
      - url
      type: object
    EndpointOut:
      example:
        filter: '{"network": "mainnet"}'
        uid: unique-endpoint-identifier
        headers:
          node: http://dashboard.com/node1
          tag: node
        chain: ton
        metadata:
          node: http://dashboard.com/node1
          tag: node
        description: The description for endpoint
        disabled: false
        filterTypes:
        - tx.created
        version: 0
        url: http://example.com/endpoint
        network: mainnet
      properties:
        uid:
          description: The endpoint's UID
          example: unique-endpoint-identifier
          maxLength: 256
          minLength: 1
          nullable: true
          pattern: ^[a-zA-Z0-9\-_.]+$
          type: string
        network:
          description: The chain network monitor by endpoint
          example: mainnet
          maxLength: 256
          minLength: 1
          type: string
        chain:
          description: Blockchain code
          example: ton
          maxLength: 256
          minLength: 1
          type: string
        description:
          description: The endpoint's description
          example: The description for endpoint
          type: string
        url:
          description: The webhook endpoint url
          example: http://example.com/endpoint
          type: string
        filter:
          description: The webhook endpoint url
          example: '{"network": "mainnet"}'
          type: string
        filterTypes:
          description: The webhook endpoint url
          example:
          - tx.created
          items:
            type: string
          type: array
        disabled:
          description: indicate whether to disable the webhook endpoint
          example: false
          type: boolean
        metadata:
          additionalProperties:
            type: string
          default: {}
          description: Optional metadata
          example:
            node: http://dashboard.com/node1
            tag: node
          type: object
        headers:
          additionalProperties:
            type: string
          default: {}
          description: Optional metadata
          example:
            node: http://dashboard.com/node1
            tag: node
          type: object
        version:
          description: endpoint version
          type: integer
      required:
      - chain
      - filterTypes
      - network
      - url
      type: object
    ListResponse_EndpointOut_:
      example:
        nextCursor: nextCursor
        total: 6
        data:
        - filter: '{"network": "mainnet"}'
          uid: unique-endpoint-identifier
          headers:
            node: http://dashboard.com/node1
            tag: node
          chain: ton
          metadata:
            node: http://dashboard.com/node1
            tag: node
          description: The description for endpoint
          disabled: false
          filterTypes:
          - tx.created
          version: 0
          url: http://example.com/endpoint
          network: mainnet
        - filter: '{"network": "mainnet"}'
          uid: unique-endpoint-identifier
          headers:
            node: http://dashboard.com/node1
            tag: node
          chain: ton
          metadata:
            node: http://dashboard.com/node1
            tag: node
          description: The description for endpoint
          disabled: false
          filterTypes:
          - tx.created
          version: 0
          url: http://example.com/endpoint
          network: mainnet
        hasPrev: true
        hasNext: true
        preCursor: preCursor
      properties:
        data:
          items:
            $ref: '#/components/schemas/EndpointOut'
          type: array
        total:
          type: integer
        hasNext:
          type: boolean
        hasPrev:
          type: boolean
        preCursor:
          type: string
        nextCursor:
          type: string
      required:
      - data
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: x-api-key
      type: apiKey
x-readme:
  samples-languages:
  - python
  - node
  - csharp
  - java
  - go
  - kotlin
  - ruby
  - rust
  - java
  - shell
  parameter-ordering:
  - path
  - query
  - header
  - cookie
  - body
  - form

